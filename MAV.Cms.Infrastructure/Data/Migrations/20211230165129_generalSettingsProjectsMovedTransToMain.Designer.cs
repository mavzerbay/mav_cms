// <auto-generated />
using System;
using MAV.Cms.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MAV.Cms.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MavDbContext))]
    [Migration("20211230165129_generalSettingsProjectsMovedTransToMain")]
    partial class generalSettingsProjectsMovedTransToMain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CategoryTrans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ToolTip")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CategoryTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CustomVar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("GroupName")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CustomVar");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CustomVarTrans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CustomVarId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomVarId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CustomVarTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.GeneralSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactWhatsApp")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleMapUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("HappyCustomer")
                        .HasColumnType("int");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("longtext");

                    b.Property<string>("LinkedInURL")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("ProjectDone")
                        .HasColumnType("int");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("longtext");

                    b.Property<string>("SmtpPort")
                        .HasColumnType("longtext");

                    b.Property<string>("SupportMail")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TestimonialSlideId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<int>("YearsOfExperienced")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestimonialSlideId");

                    b.ToTable("GeneralSettings");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.GeneralSettingsTrans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AboutUs")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactOgDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactOgImage")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactOgTitle")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid>("GeneralSettingsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("HomeOgDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("HomeOgImage")
                        .HasColumnType("longtext");

                    b.Property<string>("HomeOgTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("IcoPath")
                        .HasColumnType("longtext");

                    b.Property<string>("Info1Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Info1Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Info1Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Info2Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Info2Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Info2Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Info3Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Info3Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Info3Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Info4Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Info4Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Info4Title")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LogoPath")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GeneralSettingsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GeneralSettingsTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("mav_role");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("WorkEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkPhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("mav_user");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("mav_user_role");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FlagIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isRTL")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BackgroundImagePath")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsBackend")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("MenuPositionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RouterLink")
                        .HasColumnType("longtext");

                    b.Property<string>("RouterQueryParameter")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MenuPositionId");

                    b.HasIndex("PageId");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.MenuTrans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Info")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("MenuId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("MenuTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PageTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ParentPageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageTypeId");

                    b.HasIndex("ParentPageId");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.PageComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<bool>("isPublished")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("PageComment");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.PageTrans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BackgroundPath")
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderPath")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OgDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("OgImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("OgTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("OgType")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("PageTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Slide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SlidePositionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<bool>("isHome")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.HasIndex("SlidePositionId");

                    b.ToTable("Slide");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.SlideMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activity")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BackgroundImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonStyle")
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonText")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("LinkPageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RouterLink")
                        .HasColumnType("longtext");

                    b.Property<string>("RouterQueryParameters")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SlideId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<string>("SummaryTextStyle")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("TitleTextStyle")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LinkPageId");

                    b.HasIndex("SlideId");

                    b.ToTable("SlideMedia");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.SupportTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SupportTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SupportTypeId");

                    b.ToTable("SupportTicket");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Translate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedRemoteIp")
                        .HasColumnType("longtext");

                    b.Property<string>("Explanation")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Translation")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedLocalIp")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedRemoteIp")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translate");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CategoryTrans", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Category", "Category")
                        .WithMany("CategoryTrans")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CustomVarTrans", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.CustomVar", "CustomVar")
                        .WithMany("CustomVarTrans")
                        .HasForeignKey("CustomVarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomVar");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.GeneralSettings", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Slide", "TestimonialSlide")
                        .WithMany()
                        .HasForeignKey("TestimonialSlideId");

                    b.Navigation("TestimonialSlide");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.GeneralSettingsTrans", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.GeneralSettings", "GeneralSettings")
                        .WithMany("GeneralSettingsTrans")
                        .HasForeignKey("GeneralSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralSettings");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavUserRole", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Menu", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.CustomVar", "MenuPosition")
                        .WithMany()
                        .HasForeignKey("MenuPositionId");

                    b.HasOne("MAV.Cms.Domain.Entities.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId");

                    b.HasOne("MAV.Cms.Domain.Entities.Menu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId");

                    b.Navigation("MenuPosition");

                    b.Navigation("Page");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.MenuTrans", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuTrans")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Page", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.CustomVar", "PageType")
                        .WithMany()
                        .HasForeignKey("PageTypeId");

                    b.HasOne("MAV.Cms.Domain.Entities.Page", "ParentPage")
                        .WithMany("ChildPageList")
                        .HasForeignKey("ParentPageId");

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("PageType");

                    b.Navigation("ParentPage");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.PageComment", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Page", "Page")
                        .WithMany("PageComments")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.PageTrans", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Page", "Page")
                        .WithMany("PageTrans")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Slide", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId");

                    b.HasOne("MAV.Cms.Domain.Entities.CustomVar", "SlidePosition")
                        .WithMany()
                        .HasForeignKey("SlidePositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("SlidePosition");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.SlideMedia", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAV.Cms.Domain.Entities.Page", "LinkPage")
                        .WithMany()
                        .HasForeignKey("LinkPageId");

                    b.HasOne("MAV.Cms.Domain.Entities.Slide", "Slide")
                        .WithMany("SlideMedias")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LinkPage");

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.SupportTicket", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.CustomVar", "SupportType")
                        .WithMany()
                        .HasForeignKey("SupportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupportType");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Translate", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MAV.Cms.Domain.Entities.Identity.MavUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.CustomVar", b =>
                {
                    b.Navigation("CustomVarTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.GeneralSettings", b =>
                {
                    b.Navigation("GeneralSettingsTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Identity.MavUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Page", b =>
                {
                    b.Navigation("ChildPageList");

                    b.Navigation("PageComments");

                    b.Navigation("PageTrans");
                });

            modelBuilder.Entity("MAV.Cms.Domain.Entities.Slide", b =>
                {
                    b.Navigation("SlideMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
